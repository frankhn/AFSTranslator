@model List<AfsTranslator.src.Repositories.Dtos.TranslationLogDto>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="container">
        <div class="row">
            @*Translation box*@
            <div class="col">
                <h1>Translate a text</h1>
                <form id="translatingTextForm" method="post">
                    <div>
                        <label for="translateText">Text to translate</label>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" name="translateText" id="translateTextData" rows="2"></textarea>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-dark">Submit</button>
                    </div>
                </form>
            </div>

            <div class="col">

            </div>
        </div>
    </div>

    <div class="container">
        <div class="row mt-3">
            <div class="col">
                <label for="searchText">Search Translation:</label>
                <input type="text" class="form-control" id="searchText" placeholder="Enter text to search">
            </div>
        </div>
    </div>

    <div class="">
        <table class="table table-striped">
            <thread>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Original</th>
                    <th scope="col">translated</th>
                    <th scope="col ">Translation <select class="form-control" id="translationFilter">
                        </select>
                    </th>
                    <th scope="col">Timestamp</th>
                </tr>
            </thread>
            @foreach (var translationLog in Model)
            {
                <tbody>
                    <tr>
                        <th scope="row">@translationLog.Id</th>
                        <td>@translationLog.OriginalText</td>
                        <td>@translationLog.TranslatedText</td>
                        <td>@translationLog.Translation</td>
                        <td>@translationLog.Timestamp</td>
                    </tr>
                </tbody>
            }
        </table>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    document.querySelector('#translatingTextForm').addEventListener('submit', function (e) {
        e.preventDefault()
        const textToTranslate = document.getElementById('translateTextData').value;

        fetch('/api/TranslationLog', {
            method: 'POST', headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(textToTranslate)
        })
            .then(response => {
                if (response.ok) {
                    response.json().then(data => {
                        const tableBody = document.querySelector('tbody');
                        const newRow = document.createElement('tr');

                        newRow.innerHTML = `
                            <th scope="row">${data.id}</th>
                            <td>${data.originalText}</td>
                            <td>${data.translatedText}</td>
                            <td>${data.translation}</td>
                            <td>${data.timestamp}</td>
                        `;
                        tableBody.appendChild(newRow);
                        document.getElementById('translateTextData').value = '';
                    })
                } else {

                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });

    $('#searchText').on('input', function () {
        console.log("chaning")
        const searchText = $(this).val().toLowerCase();
        $('tbody tr').each(function () {
            const translation = $(this).find('td:eq(0)').text().toLowerCase();
            console.log(translation)
            if (searchText === '' || translation.includes(searchText)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    });

    $(document).ready(function () {
        const uniqueTranslations = [...new Set($('tbody td:eq(2)').map(function () {
            return $(this).text();
        }).get())];

        const filterDropdown = $('#translationFilter');

        filterDropdown.append($('<option>', {
            value: '',
            text: 'All'
        }));
        $.each(uniqueTranslations, function (index, value) {
            filterDropdown.append($('<option>', {
                value: value,
                text: value
            }));
        });
    });

    $('#translationFilter').on('change', function () {
        const selectedValue = $(this).val().toLowerCase();

        $('tbody tr').each(function () {
            const translation = $(this).find('td:eq(2)').text().toLowerCase();

            if (selectedValue === '' || translation === selectedValue) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    });
</script>
